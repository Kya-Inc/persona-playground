{
    "metadata": {
        "video_id": "7vuTtvshR34",
        "title": "Keynote from Vitalik Buterin (Ethereum Foundation) at Ethereum Meetup 2018",
        "link": "https://www.youtube.com/watch?v=7vuTtvshR34",
        "duration": "26:55",
        "channel_name": "TechCrunch"
    },
    "transcript": {
        "0": "[Music] yeah the crazy annoying music is over okay so today I'm going to talk about a subject that's kind of a bit off the beaten path in that it doesn't tends to get as much media attention as some of the more flashy things like Casper and sharding and zero knowledge proof but at the same time it is something that is very important to a well-functioning public blockchain and its ability to be efficient and be sustainable for the long term which is transaction fee economics or why is the fee or gas price or rent so darn high so start off with the fundamentals right so this is I'm watching walk chains katene blocks blocks contain transactions users that is you sense transactions and these transactions get included into blocks now ",
        "1": "if from an economic point of view right each transaction give us a private benefit to its sender you send a transaction because you wants to send the transaction because you get something out of the transaction being sent and being successful included into the blockchain whether you're making a payments to a merchant or participating in some charity Dao or sending your money and you know into a sum on Xian chain roulette game or whatever else you're trying to do know what you really think that you gain some value from a transaction so you send the transaction right so that's the benefit of the of a transit of a transaction to the sender could be very different for each application but it exists the transaction also creates a private cost to the proposer that includes the transaction in a block so proposer right now proposes or miners improve our stake proposers our approval pristiq validators but in general whoever decides what the composition of a block ",
        "2": "is is the proposer so in order for the proposer to take your transaction packaged it up into a block and publish a blog they pay some private cost but this private cost is pretty much negligible right it's basically just a very tiny tiny amount of computation and it's pretty much free and it's definitely vastly cheaper than the like forty five cents or whatever it is it costs to send a transaction on a Bitcoin or aetherium or whatever public blockchain you're using the much larger portion of the cost of a transaction is the social cost and the social cost is an externality it's paid by third parties that have no choice in the decision of whether or not this transaction gets included in the blockchain so social cost into other nodes in the network and this first of all includes every node that is downloading and processing the blockchain right which includes proposers and validators it also includes users it includes regular ",
        "3": "individual people and includes ether scan it includes bought exchanges and in quotes pretty much everyone everyone who is fully downloading and processing the blockchain pays some cost because your transaction being in the blockchain meets their life ever so slightly more annoying now ever so slightly more annoying multiplied by tens of thousands of people actually does could come close to equaling forty three cents and this includes present users as well as future users users that will be using aetherium in 2019 2025 maybe 2100 I have no idea if any of these systems will even be alive by then so the social cost is an externality and that is unaccounted for if proposers are the sole parties that are deciding what transactions get included so if proposers are the only ones that decide and they have full freedom to the side then proposers are going to accept all of the transactions that are worth ",
        "4": "at least their private cost but the social cost is much much higher than the private cost and so if proposers accept all of the transactions that they want the blockchain will just have way way more transactions in it than is optimal and what will this mean well you'll have nodes that are it take an extremely large amount of computational power to hereis chances are only five or ten people will even be able to run a node and a node will be storing a huge pile of junk including an encrypted backup backup of each and every one of your hard drives so we don't want that so pricing of externalities there's a long tradition in the literature of economics about pricing externalities this is an economist who's the last name is picot whose first name I forgot unfortunately who is we came up with this notion of pigouvian taxes which basically means if you have some some thing that people do that creates an externality then you try to measure the price of that externality and you charge people attacks which is ",
        "5": "equal to the social cost of their actions so one of the main examples of this is carbon taxes if you're polluting a carbon tax would require you to pay for the cost that your pollution imposes at the very least on the on the country that you're in and hope possibly within the international agreements onto the entire world as well an alternative to carbon taxes is cap-and-trade which basically means you you issue a bunch of permits for issue for a polluting and you restrict the quantity of them and then people can trade the permits now there was a paper by Martin Weitzman from 1974 that basically made this arguments right under perfect information prices and quantity limits are equivalent right if you have perfect information about what all the costs are you could set a price or you could set a quantity limit in the market all set the price and these two policies are kind of exactly identical to each other now in reality we don't live in a world of perfect information we live in a world of very very imperfect information what ",
        "6": "is the social cost of including about a transaction in a blockchain is it 43 cents is that five cents is that $8.98 we have no idea we also have no idea how many people are willing to send transactions at some particular price and we don't know what well guess what the protocol which is a thing fixed in code that can only be possibly adjusted via hard work a couple of times a year at best knows even less so the really optimal policy is very rarely just um either a price or quantity limit but depending on basically the way that the social cost curves and the social benefit curves look the optimal the optimal might end up being very different right so the point that I'm trying to make here is basically that if you look at present-day blockchains if you look at systems like Bitcoin or systems like a theory like a theory and Bitcoin cash all of these they all use block size limits but a block sands the ",
        "7": "used block size limits in order to control social costs right they use them in order to prevent the block size from ballooning up to like basically containing an encrypted backup of each and every one of your hard drives and they but this a quantity limit is only one kind of policy tool that's available to control and properly incentivize and or improperly account for social costs and the incentive structure and according to the economic literature it's very very it's very often in fact almost almost always not the optimal tool in its pure form so there is this kind of what larger space of ways to incentivize corrects transactions to or transactions that should be included in the blockchain to move it to be included in the blockchain transactions that are not worth enough to their senders to be worth it to not be included in the blockchain and there is this larger space of mechanisms that and if should ",
        "8": "be considered and research to a somewhat greater extent now one question we can ask is well what is the social cost of including a transaction in the blockchain right because ultimately the answer of this question is going to decide the answer it's our the bigger question of how big should the block size would be how big should the gasps one would be it should there be a limit should we instead get rid of the limit and instead have the protocol charge a fixed fee should we maybe have a fixed fee and a limit so in order to answer this kind of question well we need to look at not just the social cost at any one points but the social cost across many different points so a charter on the left is a a study made by Cornell in 2014 and they basically tried to estimate if the size of blocks in the Bitcoin blockchain were to increase how many nodes would continue to be able to process the blocks and stay synchronized to the network if the block size were increased to four megabyte stage number of nodes would decrease to ninety percent of the original value at 15 megabytes it would decrease to 75 ",
        "9": "percent of 38 megabytes it would decrease to half and at 211 megabytes it would decrease to 10 percent so this is one kind of social cost of shoving your transaction into a blockchain right the more transactions you shove well the harder it will be for people to run a node and the fewer people you'll have running a node now this has two costs right one of them is that you get a cost because each and every computer in the network is incurring more of a cost but you also have a second cost which is as the number of nodes decreases the network becomes less decentralized it becomes more centralized than this ends up incurring political risks that ends up incurring economic risks and all sorts of other issues right if the number of full nodes decreases to say somewhere between 10 and 50 well you know what we do know you might have an idea of what the consequences are gonna look like so one this is one very crude measurement right if we assume that the ",
        "10": "utility so kind of the cost of decentralization is logarithmic in the number of nodes which basically means that cutting down the number of nodes in the network by a factor of two always has the same cost so it's just as harmful to go from ten thousand to five thousand as it is to go from 1,000 to 500 or 115 then the graph kind of looks like that right and so the dropping utility is basically logarithmic right so the first four megabytes in this world graph drops 0.15 points of utility but then at the end 211 megabytes only drop you about 3 points of utility right so the loss of utility actually starts off high and it end but though it ends up kind of flattening out over time and the intuition behind this basically or think of it this way right imagine a blockchain where the blocks are empty or the blocks a have a hundred kilobytes in them well with a hundred kilobytes you can do a lot you can shove a full node into every smartphone you can shove a full node into every IOT device you can ",
        "11": "shove a full node pretty much everywhere you want now imagine going from 100 kilobytes to 400 kilobytes chances are as you lose a lot that now imagine going from 1.1 megabytes to 1.4 megabytes sure you lose something but you don't lose as much right so this is kind of an intuition for why social cost of getting more transactions shoved into a blockchain might actually be sub-linear with this this implies some water danger it could imply a lot of interesting conclusions such as there might potentially be multiple optimum block sizes but this is only one way of looking at the problem right so here is another chart this is the correlation between the amount of gas in etherium blocks and the etherium uncle rate so the theory monocle rate is basically a measure of kind of how poor how poorly the ethereum blockchain is handling the UM is handling the load right how long does it take to process the blocks and what portion of blocks don't get processed in time to even become part of ",
        "12": "the main chain and you can see that part of the graph is super linear right part of the graph basically is there's part of the graph that's kind of linear and it goes up from 0.05 when the blocks are empty to about somewhere around so your points to where the when the blocks become full another part goes up to about 0.4 when the blocks become full now the problem is that as this uncle rate becomes higher and higher the network becomes more and more attackable the network becomes more vulnerable to 51 percent attacks it becomes more vulnerable to selfish mining it become nodes start dropping off and when a man went on when a node drops off and that no it's hard we are could potentially be bought bought up by attackers so there's a lot of dangers that start popping up when the uncle rate goes really really high and really there's no way at all for the etherium network to be able to stable process say a guess limit of 80 million instead of 8 million so you could kind of argue that the social cost ",
        "13": "curve sort of looks like this right so on the left side you've got your kind of high marginal cost initially because there's as you go from a very small blocks to small blocks no more full nodes on every smartphone in the middle it kind of becomes linear and then at the right end it also starts ramping up basically because as it ramps up the risk of attacks goes higher and higher so this is kind of one example of the kind of analysis right that could that can go into informing what block size limit and transaction few rules might look like here is another issue made auction mechanisms so here is how transaction fee is currently work in most existing public block chains basically in economics this is called a first price auction everyone submits a transaction with their transaction they submit a bid in blockchain land we call this a transaction for you the auctioneer who is the block proposed their possible who the miner or whatever we call it so like it's the highest bids ",
        "14": "because that's how they maximize the revenue and everyone pays what they bid so any basically everyone sends their transactions the highest ones get in and if you get in whatever you bid you pay the problem is there are mathematical reasons why this mechanism is not what get what game theorists call truthful right so basically what this means is that bidding optimally in this mechanism it requires very complex strategy is that no not just what your own value of our transaction is but also what the state of the market is how much other people are billed at bidding how much other people are likely to bid what was the time since the last block and a whole bunch of a whole bunch of different variables that become very difficult to predict so optimal strategy for users is extremely complex and the Suites to a lot of inefficiencies so this is something that pops out of China very recently basically this is a kind of professional Geek Squad which is offering help to use obviously paid help ",
        "15": "to users and it's helping them to submit transactions with fees as well as possible with the rate of success as high as possible right so basically the idea is that there was a some one service that seemed to use spamming the blockchain as a voting mechanism for which coins get listed on their exchange and so lots of people are trying to spam the blockchain and because of these guess and efficiencies you get these third-party intermediary services that are basically helping people do this as efficiently as possible right so on top of the inefficiency is over this stupid voting voting mechanism existing in the first place you also have these extra inefficiencies that arise from people just having no idea how to set fees correctly and as a result professional teams come in to help we won we could get rid of these problems with better mechanism design so second price auctions are the alternative that economists often like pointing out and the idea here is that everyone pays the ",
        "16": "same bid as the lowest bidder that got into a block so the strategy for transaction senders becomes very simple number one decide how much you value the transaction getting in step two bid that amount that's it now why is this optimal well there's basically two cases right the first case is that the lowest bid is higher than the bid that the bid that you submitted if that's true your transactions not going to get in but you're happy the transaction to not get in because they because from your point of view getting into the block at that particular point of time was is a ripoff it's too expensive for you second case the lowest bid is lower than what you bid and in that case you do get in yay and you're happy that you do get it in because it was worth it for you to get in and you're in the exact value of your bid does not influence the price you pay so there is a benefit here the problem is though that even though the strategy for buyers becomes very simple the strategy for miners becomes much more complex right and the problem here is ",
        "17": "that this kind of mechanism becomes vulnerable to a kind of manipulation strategy on the part of the proposer so on the part of the entity that's creating the block so what do you do right basically imagine you have a miner and the miner has is getting some transactions and it's getting the bids and that's kind of what the demand curve looks like so we have some bids that lower gas prices somebody as a medium gas prices some bids at higher gas prices well the miner could do is the miner could fill part of the block with fake transactions they're just being sent from the miner to themselves and that's the kind of darker rectangle on the right and by doing that the miner reduces the number of transactions from other people that they're accepting but the miner also pushes the the lowest bidder price up and so if you look at the size of the light gray rectangle the miners revenue you well the the x-axis shrinks a bit because he is accustomed I knows rejecting transactions but the y-axis becomes much bigger because the price goes higher so basically the miner has ",
        "18": "an incentive to participate in these kind of monopoly tactics there are other other even worse attacks so for example the miner might benefit from sending sending there including their own transactions in blocks and pushing up the price of those their miner benefits from making private agreements with specific senders where a specific senders offer sends transactions with higher fees than their actual bids and then the miner refunds them under the table so there's lots of economic attacks that start to arise well hybrid mechanism so the idea here is that you basically establish a kind of minimum fear that gets burned so the fee does not go to a miner it does not go to anyone it just gets basically deleted from the supply or possibly it gets kind of paid out as a block reward to the entire set of miners of validators over a very long period of time and you adjust this via stole that on average box are 50% full right so in protocol you just have a mechanism that does this adjustment automatically so in the ",
        "19": "normal case what you do is you just thought you just check is the minimum fee worth it if it isn't then you stay away if it is then you bid the minimum key +1 in chances are you get encoded now in the special case where suddenly there's a lot of activity all at once well it might get a bit chaotic for a while but within a couple of blocks the minimum fee can adjust upwards and you can get easily included again and it stabilizes there is a more complex option so you can allow transaction fee is that you can allow transaction senders to say things like I bid the minimum fee plus X up to some maximum Y starting from some block number and the point of this is that it allows transaction senders they're gonna have expressed more complex opinions right so here that allows expressing the opinion I don't care when this transaction gets included I just wanted to get included but I wanted but I wants to pay as low a price as possible right so this clearly encodes what a lot of people's utility function and clearly encodes the desire ",
        "20": "is that a very large class of transaction cendars have at some particular points in time and in a while is expressing this opinion and basically getting a fee as well as possible without having to hire some Geek Squad so this is that so that's another mechanism of how transaction fee markets could be optimized somewhat third issue here I'm storage fees right so basically the problem is that there's transactions in public watch chains consume different kinds of resources right so they consume bandwidth because a block has to contain the transaction everyone has to download a block they download it over the internet the internet costs money or people have limited bandwidth some people have lots of bandwidth some people are sitting are sitting in a Starbucks or have a two 250k roaming connection there is computational costs and there is also storage consumption right so if for example you send money to a new account or you create a new smart contract that is creating data ",
        "21": "that has to be stored and it's creating day and because smart contracts at least in their current form basically stick around forever and accounts basically stick around forever it's creating storage costs that must be incurred not just by the nodes that exist today but also by all nodes that are processing the block chain at any point for going forever into the future so this is probably one of the major incentive misalignment issues in block chains that exists today right you have this ability to fairly cheaply pay a one-time cost to create this bit this object that has to be stored by people going forward forever there's other issues too so first of all storage is underpriced second feet transaction fees tend to be extremely volatile day to day right someday the etherium try gas price they could get you in as one way some days it goes up to 100 gray some days it's in the middle but the social cost of storage is not is not that volatile right the cost of everyone storing your file doesn't bounce up and down by a factor of 80 ",
        "22": "every week also there's no there's not enough incentive to clear storage there's no incentive to queer storage earlier instead of clearing storage later and there's incentive to create weird second layer markets like gasp token so there's a lot of in efficiency as in markets as they exist today right so here's one possible solution ongoing storage fees so basically the idea is that instead of making storage be a one-time cost that has to be paid in gas storage would be an ongoing cost that every single accounts would have to pay per block for a denominated in ether for every single byte that it is storing you have a smart contract your contra your smart contracts code and storage takes up seven kilobytes well you have to pay whatever the storage fee is times 7,000 every block so what this basically does is it aligns incentives better because first of all it means that storing if you store something that everyone has to see pal or if you publish something that ",
        "23": "everyone has to keep storing forever then everyone has to keep paying for or you have to keep paying for it forever if you're not willing to keep it for it at some point then the object eventually gets deleted automatically when the accounts that's when the account runs out of money and no one has has topped up at storage fees now there's a trade-off like basically is Ana constant or can end change if n is a constant you have more fee predictability if n can change you can have more storage size predictability so there's trade-offs very similar to the trade-offs that exist in the end kind of shorter term of blocking inclusion markets and this stuff can be studied we can start looking at what the social cost is is the social cost more linear is the social cost less linear what does the social cost curve look like we don't this is stuff we need to think about more right so this is now ongoing storage fees have been a fairly controversial issue and one of the reasons why is because they do make the ",
        "24": "developer experience more difficult in a bunch of ways now one of them is for example what if you build an application and that application depends on some contracts and then that contract goes bankrupt because it didn't pay enough storage fees what do you do how a lot of contracts written today allow anyone to perform some operation in that contract that increases that contract storage size in this kind of model this would no longer work because the contract basically that would allow other people to greif the tracked by ballooning and storage size and causing its rent its rents to go so high that the college no one will be able to afford it anymore third question if there's some contract which is a public good that provides a little bit of value to a very large set of users like a software library who pays for its upkeep so there are challenges one interesting mitigation is hibernation so basically if a contract can't pay storage fees anymore instead of being deleted permanently it gets hibernated it gets removed from the ",
        "25": "active State and it gets put into the history and it's basically is just sitting there and while it's in its hibernated form no one can interact with it but if you really wants to interact with it you can basically supply proofs and you can revive the contract right you can supply a pointer that says here is the last time the contract was hibernated here is what the contracts internal state was when it was hibernated then here is a proof that says the contract was not woken before and now I'm going to wake it and this sort of resets the contracts to that particular state so there is one kind of attack that you have to watch out for where you basically kind of wake a contract twice in response and the second time you wake at you points to in older time that that the contract wants a sweep instead of a newer time but there are ways to basically mitigate this kind of problem right so basically this is another kind of modification that can be made to improve transaction fee markets so ",
        "26": "there's still a lot of stuff here to kind of implement to think about in terms of what's the right way to implement these kinds of schemes and there's still a lot of further research needed but again the point here is right that aside from the the research into technical improvements like proof of steak like scalability and like privacy improvements as your knowledge proofs there are a lot of these improvements that can be made on the economic layer in order to basically improve the blockchains efficiency make the make blockchains easier as a user with the and basically by providing better incentives so that users stop imposing such a large social cost on each other and this is something that you know we have thought about a lot and we really need to be a need to be thinking about more in does the sort of a lot of attention so thank you [Applause] "
    }
}